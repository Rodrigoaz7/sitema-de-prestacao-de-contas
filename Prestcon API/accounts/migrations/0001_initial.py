# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-05-29 16:52
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Seu CPF (apenas números)', max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$', 32), 'Informe um cpf válido. ', 'invalid')], verbose_name='CPF')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('telefone', models.CharField(max_length=17, verbose_name='Telefone')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Equipe')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_diretor', models.BooleanField(default=False, verbose_name='Conta de diretor')),
                ('is_secretario', models.BooleanField(default=False, verbose_name='Conta de secretário')),
                ('is_auditor', models.BooleanField(default=False, verbose_name='Conta de auditor')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
            ],
            options={
                'verbose_name_plural': 'Todas as contas',
                'verbose_name': 'Conta',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserAuditor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_auditor_despesa', models.BooleanField(default=False, verbose_name='Auditor de despesas')),
                ('is_auditor_receita', models.BooleanField(default=False, verbose_name='Auditor de receitas')),
                ('is_auditor_certidao', models.BooleanField(default=False, verbose_name='Auditor de certidões')),
            ],
            options={
                'verbose_name_plural': 'Auditores',
                'verbose_name': 'Auditor',
            },
        ),
        migrations.CreateModel(
            name='UserDesenvolvedor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Desenvolvedores',
                'verbose_name': 'Desenvolvedor',
            },
        ),
        migrations.CreateModel(
            name='UserDiretor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Diretores',
                'verbose_name': 'Diretor',
            },
        ),
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Masters',
                'verbose_name': 'Master',
            },
        ),
        migrations.CreateModel(
            name='UserSecretaria',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tipo', models.CharField(max_length=25, verbose_name='Estadual ou Municipal')),
                ('cidade', models.CharField(max_length=50, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=60, verbose_name='Estado')),
                ('is_valid', models.BooleanField(default=True, verbose_name='Conta válida')),
            ],
            options={
                'verbose_name_plural': 'Secretarias da educação',
                'verbose_name': 'Secretaria da educação',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='userauditor',
            name='secretaria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UserSecretaria', to='accounts.UserSecretaria', verbose_name='Usuário da secretaria'),
        ),
    ]
